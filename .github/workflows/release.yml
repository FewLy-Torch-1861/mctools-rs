name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: mctools-linux-x64
            asset_name: mctools-linux-x64

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: mctools-windows-x64.exe
            asset_name: mctools-windows-x64.exe

          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: mctools-macos-x64
            asset_name: mctools-macos-x64

          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: mctools-macos-arm64
            asset_name: mctools-macos-arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        shell: bash
        run: |
          src_dir="target/${{ matrix.target }}/release"
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            mv "$src_dir/mctools.exe" "${{ matrix.artifact_name }}"
          else
            mv "$src_dir/mctools" "${{ matrix.artifact_name }}"
          fi

      - name: Upload artifact for release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.artifact_name }}
